{
  "_from": "norma@^1.0.0",
  "_id": "norma@1.0.0",
  "_inBundle": false,
  "_integrity": "sha512-OQwoh7JVkn5lQywW03ibfTDottHi7LGtXe3tssuFG9ar6wkRQFu+fUyqpML0dtp7fHXmI7XDs8S+AYkaylcBMQ==",
  "_location": "/norma",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "norma@^1.0.0",
    "name": "norma",
    "escapedName": "norma",
    "rawSpec": "^1.0.0",
    "saveSpec": null,
    "fetchSpec": "^1.0.0"
  },
  "_requiredBy": [
    "/seneca",
    "/use-plugin"
  ],
  "_resolved": "https://registry.npmjs.org/norma/-/norma-1.0.0.tgz",
  "_shasum": "c826e84b092ecbd5f7eecad80489f1564bf79643",
  "_spec": "norma@^1.0.0",
  "_where": "/home/aadil/Haider/Learning/seneca_Application/inviteFriend/node_modules/seneca",
  "author": {
    "name": "Richard Rodger",
    "url": "http://richardrodger.com"
  },
  "bugs": {
    "url": "https://github.com/rjrodger/norma/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "eraro": "^1.1.0",
    "lodash": "^4.17.15"
  },
  "deprecated": false,
  "description": "A function argument organizer",
  "devDependencies": {
    "docco": "^0.8.0",
    "jshint": "^2.10.2",
    "mocha": "^6.2.0",
    "pegjs": "^0.10.0",
    "uglify-js": "^3.6.0"
  },
  "files": [
    "README.md",
    "LICENSE.txt",
    "norma.js",
    "norma-parser.js",
    "norma-min.js",
    "norma-min.js.map"
  ],
  "homepage": "https://github.com/rjrodger/norma",
  "keywords": [
    "norma",
    "function",
    "method",
    "parameter",
    "argument",
    "parameters",
    "arguments",
    "type",
    "signature"
  ],
  "license": "MIT",
  "main": "norma.js",
  "name": "norma",
  "repository": {
    "type": "git",
    "url": "git://github.com/rjrodger/norma.git"
  },
  "scripts": {
    "build": "./build.sh",
    "clean": "rm -rf node_modules yarn.lock package-lock.json",
    "repo-publish": "npm run repo-tag && npm publish --access public",
    "repo-tag": "REPO_VERSION=`node -e \"console.log(require('./package').version)\"` && echo TAG: v$REPO_VERSION && git commit -a -m v$REPO_VERSION && git push && git tag v$REPO_VERSION && git push --tags",
    "test": "./test.sh"
  },
  "version": "1.0.0"
}
